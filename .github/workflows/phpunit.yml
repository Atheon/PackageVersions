# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "PHPUnit tests"

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  phpunit:
    name: "PHPUnit tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "highest"
          - "locked"
          - "classmap-authoritative"
          - "no-scripts"
        php-version:
          - "8.0"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      # Many tools rely on this tool staying as `1.x`, therefore we check out the current workdir as
      # a compatible branch name
      - name: "Switch active branch to 1.99.x"
        run: git checkout -b 1.99.x || true

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          tools: composer:v2

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install with classmap authoritative flag"
        if: ${{ matrix.dependencies == 'classmap-authoritative' }}
        run: "composer install --no-interaction --classmap-authoritative --ignore-platform-req=php"

      - name: "Install without scripts"
        if: ${{ matrix.dependencies == 'no-scripts' }}
        run: "composer install --no-interaction --no-scripts --ignore-platform-req=php"

      - name: "Tests"
        run: "vendor/bin/phpunit"
